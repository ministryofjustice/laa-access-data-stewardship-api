openapi: "3.0.0"
info:
  version: 1.0.0
  title: Applications API
paths:
  /api/v1/applications:
    get:
      tags:
        - applications
      summary: Get applications
      operationId: getApplications
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Applications"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    post:
      tags:
        - applications
      summary: Create an application
      operationId: createApplication
      requestBody:
        description: create an application
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequestBody'
      responses:
        '201':
          description: 'Created'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /api/v1/applications/{id}:
    get:
      summary: Get application by id
      operationId: getApplicationById
      tags:
        - applications
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the application to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    put:
      tags:
        - applications
      summary: Update an application
      operationId: updateApplication
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the application to updated
          schema:
            type: string
            format: uuid
      requestBody:
        description: update an existing item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequestBody'
      responses:
        '204':
          description: No content
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    delete:
      summary: Delete application by id
      operationId: deleteApplication
      tags:
        - applications
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the application to be deleted
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /api/v1/applications/{id}/history:
    post:
      summary: Record an application history entry
      operationId: recordApplicationHistory
      tags:
        - applications
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the application the history relates to
          schema:
            type: string
            format: uuid
      requestBody:
        description: Record a change in the application's history
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationHistoryRequestBody'
      responses:
        '201':
          description: 'Created'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    get:
      summary: Get history for an application
      operationId: getApplicationHistory
      tags:
        - applications
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the application
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationHistoryEntry'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

components:
  schemas:
    Application:
      required:
        - id
        - provider_firm_id
        - provider_office_id
        - client_id
      properties:
        id:
          type: string
          format: uuid
        provider_firm_id:
          type: string
        provider_office_id:
          type: string
        client_id:
          type: string
          format: uuid
        status_code:
          type: string
        statement_of_case:
          type: string
        is_emergency_application:
          type: boolean
        proceedings:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationProceeding"
      allOf:
        - $ref: "#/components/schemas/recordHistory"
    ApplicationRequestBody:
      required:
        - provider_firm_id
        - provider_office_id
        - client_id
      properties:
        provider_firm_id:
          type: string
        provider_office_id:
          type: string
        client_id:
          type: string
          format: uuid
        status_code:
          type: string
        statement_of_case:
          type: string
        is_emergency_application:
          type: boolean
        proceedings:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationProceedingRequestBody"
    ApplicationProceeding:
      required:
        - id
        - application_id
        - proceeding_type
      properties:
        id:
          type: string
          format: uuid
        proceeding_code:
          type: string
        level_of_service_code:
          type: string
      allOf:
        - $ref: "#/components/schemas/recordHistory"
    ApplicationProceedingRequestBody:
      required:
        - application_id
        - proceeding_type
      properties:
        proceeding_code:
          type: string
        level_of_service_code:
          type: string
    recordHistory:
      required:
        - createdAt
        - createdBy
        - updatedAt
        - updatedBy
      properties:
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string

    Applications:
      type: array
      items:
        $ref: "#/components/schemas/Application"

    ApplicationHistoryRequestBody:
      required:
        - user_id
        - action
        - timestamp
        - application_snapshot
      properties:
        user_id:
          type: string
        action:
          type: string
          description: A description or enum of the action performed (e.g., CREATED, UPDATED, DELETED)
        resource_type:
          type: string
          description: The type of resource (e.g., APPLICATION, PROCEEDING)
        timestamp:
          type: string
          format: date-time
        application_snapshot:
          type: object
          additionalProperties: true
          description: A JSON representation of the application at the time of the action
    ApplicationHistoryMessage:
      required:
        - user_id
        - action
        - resource_type
        - resource_id
        - timestamp
      properties:
        user_id:
          type: string
        action:
          type: string
          description: A description or enum of the action performed (e.g., CREATED, UPDATED, DELETED)
          enum:
            - CREATED
            - UPDATED
            - DELETED
        resource_type:
          type: string
          description: The type of resource (e.g., APPLICATION, PROCEEDING)
          enum:
            - APPLICATION
            - PROCEEDING
        resource_id:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time

    ApplicationHistoryEntry:
      allOf:
        - $ref: "#/components/schemas/ApplicationHistoryRequestBody"
        - type: object
          properties:
            id:
              type: string
              format: uuid
